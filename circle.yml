version: 2
jobs:
  build:
    working_directory: ~/hound
    docker:
      - image: circleci/ruby:2.3-node
        environment:
          RAILS_ENV: test
          CIRCLECI: true
          PGHOST: 127.0.0.1
          PGUSER: houndci
      - image: circleci/postgres:9.5-alpine
        environment:
          POSTGRES_USER: houndci
          POSTGRES_DB: houndci-test
          POSTGRES_PASSWORD: ""
      - image: redis:3.2.10-alpine
    steps:
      - checkout

      # Restore bundle cache
      - type: cache-restore
        key: houndci-{{ checksum "Gemfile.lock" }}

      # Restore yarn cache
      - type: cache-restore
        key: houndci-yarn-{{ checksum "yarn.lock" }}

      # Install System Dependencies (for capybara-webkit)
      - run: sudo apt-get install qt5-default libqt5webkit5-dev gstreamer1.0-plugins-base gstreamer1.0-tools gstreamer1.0-x

      # Bundle install dependencies
      - run: bundle install --path vendor/bundle

      # Yarn install
      - run: yarn install

      # Store bundle cache
      - type: cache-save
        key: houndci-{{ checksum "Gemfile.lock" }}
        paths:
          - vendor/bundle

      - type: cache-save
        name: Store yarn cache
        key: houndci-yarn-{{ checksum "yarn.lock" }}
        paths:
          - ~/.yarn-cache

      # Wait for DB
      - run: dockerize -wait tcp://localhost:5432 -timeout 1m

      # Wait for Redis
      - run: dockerize -wait tcp://localhost:6379 -timeout 1m

      # Database setup
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load

      # Run rspec in parallel
      - type: shell
        command: xvfb-run --auto-servernum bundle exec rake
